% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runMCMC.R
\name{runMCMC}
\alias{runMCMC}
\title{Run MCMC iterations}
\usage{
runMCMC(
  track,
  nbStates,
  nbIter,
  fixPar = NULL,
  fixMu = NULL,
  inits,
  priors,
  knownStates,
  props,
  tunes,
  Hmat,
  updateState = TRUE,
  adapt = FALSE
)
}
\arguments{
\item{track}{Dataframe of data, with columns \code{"x"}, \code{"y"}, \code{"time"}, and \code{"ID"}}

\item{nbStates}{Number of states}

\item{nbIter}{Number of iterations}

\item{fixPar}{List of fixed parameter values (\code{"tau_pos"}, \code{"tau_vel"}, \code{"sigma"}), with \code{"NA"} for parameters to estimate}

\item{fixMu}{List of fixed OUF range centre coordinate pairs, with \code{"NA"} for IOU states or pairs to estimate}

\item{inits}{List of initial parameters (\code{"tau_pos"}, \code{"tau_vel"}, \code{"sigma"}, \code{"Q"}, \code{"state"})}

\item{priors}{List of parameters of prior distributions, with components:
\itemize{
  \item{"mean":} Vector of means for normal priors on movement parameters, of length \code{"3*nbStates"}
  \item{"sd":} Vector of standard deviations for normal priors on movement parameters, of length \code{"3*nbStates"}
  \item{"shape":} Vector of shapes of gamma priors for the transition rates
  \item{"rate":} Vector of rates of gamma priors for the transition rates
  \item{"con":} Vector of concentrations of Dirichlet priors for transition probabilities
}}

\item{knownStates}{Vector of known states with \code{"NA"} or those to estimate.}

\item{props}{List of parameters of proposal distributions, with components:
\itemize{
  \item{"S":} Initial value for the lower triangular matrix of RAM algorithm, so that the covariance matrix of the proposal distribution is \code{"SS'"}.
  \item{"updateLim":} Vector of two values: min and max length of updated state sequence
  \item{"updateProbs":} Probability for each element of \code{"updateLim[1]:updateLim[2]"} (if \code{"NULL"},
  all values are equiprobable)
}}

\item{tunes}{List of tuning parameters, with components:
\itemize{
  \item{"thinStates":} Thinning factor for the posterior state sequences (needed because
of memory limitations)
}}

\item{Hmat}{Matrix of observation error variance (four columns, and one row
for each row of data)}

\item{updateState}{Logical. If \code{"FALSE"}, the state process is not updated
(for exploratory analysis only, useful for testing single state models)}

\item{adapt}{Integer. If \code{"adapt"} > 0, use the the Robust Adaptive Metropolis (RAM) algorithm
by Vihola (2012) to update the proposal distribution for each parameter at each iteration (up to \code{"adapt"} iterations)
to a target acceptance rate of 23.4\%.}
}
\description{
Run MCMC iterations
}
\examples{
\dontrun{
}

}
\references{
Michelot, T., Blackwell, P.G. (2019).
State‐switching continuous‐time correlated random walks.
Methods Ecol Evol, 10: 637-649. doi:10.1111/2041-210X.13154

Vihola, M. (2012).
Robust adaptive Metropolis algorithm with coerced acceptance rate.
Stat Comput, 22: 997-1008. doi:10.1007/s11222-011-9269-5
}
